@use "sass:map";
@import "vanilla-framework";

$dropdown-max-height: 20rem;

// XXX: Temporarly we are duplicating some of the placeholders defined in Vanilla
// to avoid conflict of including the duplicate of base Vanilla in React components.
// This is a temporary solution until we have a better way to handle this.

// as in Vanilla _base_placeholders.scss
%vf-hide-text {
  overflow: hidden;
  text-indent: 110vw;
  white-space: nowrap;
}

// as in Vanilla _base_placeholders.scss
%icon {
  $vertical-offset: 0.5px;
  @extend %vf-hide-text;
  @include vf-icon-size($default-icon-size);
  background: {
    position: center;
    repeat: no-repeat;
  }

  display: inline-block;
  font-size: inherit; // allow icons to match size of parent text element, when set in em
  margin: 0;
  padding: 0;
  position: relative;
  vertical-align: calc(
    $vertical-offset + 0.5 * $cap-height - 0.5 * $default-icon-size
  );
}

// as in Vanilla _base_forms.scss
%vf-disabled-element {
  cursor: not-allowed;
  opacity: $disabled-element-opacity;
}

// as in Vanilla _base_forms.scss
%vf-readonly-element {
  color: $color-mid-light;
  cursor: default;

  &:hover,
  &:active {
    border-color: $color-mid-dark;
    outline: none;
  }
}

// as in Vanilla _base_forms.scss
%bordered-text-vertical-padding {
  padding-bottom: $input-vertical-padding;
  padding-top: $input-vertical-padding;
}

// as in Vanilla _base_forms.scss
%vf-input-elements {
  @extend %bordered-text-vertical-padding;
  @include vf-focus($color-focus, $bar-thickness, true);
  @include vf-animation(#{background-color}, fast);

  // stylelint-disable property-no-vendor-prefix
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
  // stylelint-enable property-no-vendor-prefix
  background-color: $colors--theme--background-inputs;
  border: 0 solid transparent;
  border-bottom: $input-border-thickness solid
    $colors--theme--border-high-contrast;
  border-radius: 0;
  color: $colors--theme--text-default;
  font-family: unquote($font-base-family);
  font-size: 1rem;
  font-weight: $font-weight-regular-text;
  line-height: map-get($line-heights, default-text);
  margin-bottom: $input-margin-bottom;
  min-width: 8em;
  padding-left: $sph--small;
  padding-right: $sph--small;
  vertical-align: baseline;
  width: 100%;

  &:hover {
    background-color: $colors--theme--background-hover;
  }

  &:active,
  &:focus {
    background-color: $colors--theme--background-active;
  }

  option,
  option:checked {
    background-color: $colors--theme--background-alt;
    color: $colors--theme--text-default;
  }

  option:checked:not(:disabled) {
    background-color: $colors--theme--background-active;
  }

  &::placeholder {
    color: $colors--theme--text-muted;
  }

  &.is-dense {
    margin: 0 0 $spv-nudge-compensation 0;
    padding-bottom: calc($spv-nudge - $spv--x-small - $input-border-thickness);
    padding-top: calc($spv-nudge - $spv--x-small - $input-border-thickness);
  }

  &[disabled],
  &[disabled="disabled"] {
    @extend %vf-disabled-element;
  }

  &[readonly],
  &[readonly="readonly"] {
    @extend %vf-readonly-element;
  }

  @each $state, $color in $states {
    &.has-#{$state} {
      border: $input-border-thickness solid $color;
    }
  }
}

.multi-select {
  position: relative;
}

.multi-select .p-form-validation__message {
  margin-top: 0;
}

.multi-select__condensed-text {
  margin-right: $sph--large + $sph--x-small;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.multi-select__input {
  cursor: pointer;
  position: relative;

  &.items-selected {
    border-top: 0;
    box-shadow: none;
    top: -#{$border-radius};
  }

  &[disabled],
  &[disabled="disabled"] {
    opacity: 1;
  }
}

.multi-select__dropdown {
  background-color: $colors--theme--background-default;
  box-shadow: $box-shadow;
  color: $colors--theme--text-default;
  left: 0;
  max-height: $dropdown-max-height;
  overflow: auto;
  padding-top: $spv--small;
  position: absolute;
  right: 0;
  top: calc(100% - #{$input-margin-bottom});
}

.multi-select__dropdown--side-by-side {
  display: flex;
  flex-wrap: wrap;
}

.multi-select__group {
  flex: 1 0 auto;
}

.multi-select__dropdown-list {
  list-style: none;
  margin-bottom: $sph--x-small;
  margin-left: 0;
  padding-left: 0;
}

.multi-select__footer {
  background: $colors--theme--background-default;
  border-top: 1px solid $colors--theme--border-default;
  bottom: 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding: $sph--small $sph--large 0 $sph--large;
  position: sticky;
}

.multi-select__dropdown-header {
  font-size: #{map.get($font-sizes, small)}rem;
  letter-spacing: #{map.get($font-sizes, small)}px;
  margin-bottom: 0;
  padding: $spv--x-small $sph--large;
  position: relative;
  text-transform: uppercase;
}

.multi-select__dropdown-item {
  padding: 0 $sph--large;

  .p-checkbox {
    padding-top: $sph--x-small;
  }

  &,
  .p-checkbox {
    width: 100%;
  }
}

.multi-select__dropdown-button {
  border: 0;
  margin-bottom: 0;
  padding-left: $sph--small;
  padding-right: $sph--small;
  text-align: left;
  width: 100%;
}

.multi-select__selected-list {
  background-color: $colors--theme--background-inputs;
  border-bottom: 0;
  margin: 0;
  overflow: hidden;
  padding: $spv--x-small $sph--small;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.multi-select__select-button {
  @extend %vf-input-elements;
  align-items: center;
  display: inline-flex;
  height: 2.5rem;
  justify-content: space-between;
  overflow: auto;

  position: relative;
  z-index: 0;

  &::after {
    content: "";
    margin-left: $sph--large;
    position: absolute;
    right: $sph--small;
    top: 50%;
    transform: translateY(-50%) rotate(-180deg);

    @extend %icon;
    @include vf-icon-chevron-themed;
    @include vf-transition($property: transform, $duration: fast);
  }

  &[aria-expanded="true"] {
    background-color: $colors--theme--background-hover;
  }

  &[aria-expanded="false"] {
    &::after {
      transform: translateY(-50%) rotate(0);
    }
  }
}
